from flask import Flask, render_template, request, redirect, url_for, session
import os
from db import find_similar_items, get_item_by_id
from werkzeug.utils import secure_filename

app = Flask(__name__, static_folder='static', static_url_path='/static')
app.secret_key = "your_secret_key"
UPLOAD_FOLDER = "static/uploads"
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

# –û—Ç–ª–∞–¥–∫–∞: –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
print(f"üìÅ Static folder: {app.static_folder}")
print(f"üìÅ Static URL path: {app.static_url_path}")
print(f"üìÅ Upload folder: {UPLOAD_FOLDER}")
print(f"üìÅ Upload folder exists: {os.path.exists(UPLOAD_FOLDER)}")


@app.route("/", methods=["GET", "POST"])
def index():
    user_photo = None
    items = None
    comment = ""
    if request.method == "POST":
        file = request.files["photo"]
        comment = request.form.get("comment", "")
        if file:
            filename = secure_filename(file.filename)
            filepath = os.path.join(UPLOAD_FOLDER, filename)
            file.save(filepath)
            
            # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ
            os.chmod(filepath, 0o644)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
            
            user_photo = filepath.replace("\\", "/")  # –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ HTML
            
            # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            print(f"üìÅ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª: {filename}")
            print(f"üìÅ –ü–æ–ª–Ω—ã–π –ø—É—Ç—å: {filepath}")
            print(f"üìÅ –ü—É—Ç—å –¥–ª—è HTML: {user_photo}")
            print(f"üìÅ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.exists(filepath)}")
            if os.path.exists(filepath):
                print(f"üìÅ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize(filepath)} –±–∞–π—Ç")
            
            items = find_similar_items(filepath, comment=comment)
            print("items:", items)  # <-- print –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            return render_template(
                "index.html", user_photo=user_photo, items=items, comment=comment
            )
    # GET-–∑–∞–ø—Ä–æ—Å
    return render_template(
        "index.html", user_photo=user_photo, items=items, comment=comment
    )


@app.route("/add_to_cart/<int:item_id>")
def add_to_cart(item_id):
    cart = session.get("cart", [])
    cart.append(item_id)
    session["cart"] = cart
    return redirect(url_for("cart"))


@app.route("/cart")
def cart():
    cart = session.get("cart", [])
    items = [get_item_by_id(i) for i in cart]
    return render_template("cart.html", items=items)


@app.route('/static/uploads/<filename>')
def uploaded_file(filename):
    """–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    file_path = os.path.join(UPLOAD_FOLDER, filename)
    abs_file_path = os.path.abspath(file_path)  # –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å
    
    print(f"üîç –ó–∞–ø—Ä–æ—Å —Ñ–∞–π–ª–∞: {filename}")
    print(f"üîç –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å: {file_path}")
    print(f"üîç –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å: {abs_file_path}")
    print(f"üîç –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.exists(abs_file_path)}")
    
    if os.path.exists(abs_file_path):
        from flask import send_file
        return send_file(abs_file_path)
    else:
        from flask import abort
        abort(404)

if __name__ == "__main__":
    app.run(debug=True)
